import requests
from bs4 import BeautifulSoup as bs
from urllib.parse import urljoin

# Querying the target URL for the form and extracting the action and input fields
# Testing the form with SQL injection

req = requests.Session() # Initialising the HTTP session

def get_page(url):
    soup = bs(req.get(url).text, 'html.parser')
    return soup.findAll('form')

def get_page_details(content):
    details = {}

    try:
        action = content.attrs.get('action').lower()
    except:
        action = 'none'

    method = content.attrs.get('method', 'get').lower()

    inputs = []

    for input in content.findAll('input'):
        in_type = input.attrs.get('type', 'text')
        in_name = input.attrs.get('name')
        in_value = input.attrs.get('value')
        inputs.append({'type' : in_type, 'name' : in_name, 'value' : in_value})

    details['action'] = action
    details['method'] = method
    details['inputs'] = inputs

    return details


def vulnerable(response):
    errors = ['error in your SQL syntax',
              'you have an error in your SQL syntax',
              'warning: mysql',
              'supplied argument is not a valid MySQL',
              'Unclosed quotation mark after the character string',
              'Incorrect syntax near']

    for error in errors:
        if error in response.content.decode('utf-8').lower():
            return False

    return True


def sql_injection(url):
    for c in "\"'":
        temp_url = f'{url}{c}'
        res = req.get(temp_url)

        if vulnerable(res): # Checking for vulnerable HTTP requests
            return temp_url