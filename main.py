from versionChecker import *
from fileReader import *
from tkinter import *
from tkinter import ttk
import platform

current_os = platform.system()
root = Tk()

def vulnerable_apps_window():
    apps = Toplevel(root)
    apps.title('Vulnerable Applications')
    apps.geometry('650x800')
    apps.resizable(False, False)
    appsLabel = Label(apps, text='Vulnerable Applications')
    appsLabel.place(x=250, y=10)

    if current_os == 'Windows':
        table = ttk.Treeview(apps, columns=('Name', 'Version', 'Vulnerability'), show='headings', height=15)
        table.column('# 1', anchor=CENTER)
        table.heading('# 1', text='Name')
        table.column('# 2', anchor=CENTER, width=200, stretch=NO)
        table.heading('# 2', text='Version')
        table.column('# 3', anchor=CENTER, width=100, stretch=NO)
        table.heading('# 3', text='Vulnerability')

        name, version = get_win()

        for i in range(len(name)):
            temp_name = name[i]
            temp_version = version[i]
            temp_vuln = db_search(temp_name)
            table.insert('', index=i, text='1', values=(temp_name, temp_version, temp_vuln))

        print(vuln_index_lst)

    else:
        table = ttk.Treeview(apps, columns=('Name', 'Vulnerability'), show='headings', height=15)
        table.column('# 1', anchor=CENTER)
        table.heading('# 1', text='Name')
        table.column('# 2', anchor=CENTER)
        table.heading('# 2', text='Vulnerability')

        name = get_linux()

        for i in range(len(name)):
            temp_name = name[i]
            temp_vuln = db_search(temp_name)
            table.insert('', index=i, text='1', values=(temp_name, temp_vuln))

    #TODO: Add button and command to scan database & button to add apps
    #apps_button = Button(apps, text='Get Programs', command=add_apps)
    #vuln_button = Button(apps, text='Vulnerabilities', command=vuln_scan, width=15)

    table.place(x=50, y=60)

    # Scrollbar
    table_scroll = ttk.Scrollbar(apps, orient=VERTICAL, command=table.yview)
    table_scroll.pack(side=RIGHT, fill='y')
    table.configure(yscrollcommand=table_scroll.set)


#TODO: Database testing window
def database_testing_window():
    test = Toplevel(root)
    test.title('Database Testing')
    test.geometry('500x400')

    inj_butt = Button(test, text='Microsoft Access', width=15)
    inj_butt.place(x=50, y=100)

#TODO: SQL Injection development

#Quit Query
def quit_query():
    query = Toplevel(root)
    query.title('Quit')
    query.geometry('300x120')
    query.resizable(False, False)

    message_label = Label(query, text='Are you sure you want to quit?', font=('Helvetica', 12))
    message_label.place(x=40, y=10)

    message_label2 = Label(query, text='All unsaved reports will be lost')
    message_label2.place(x=60, y=40)

    quit_yes = Button(query, text='Yes', command=root.destroy, padx=18, pady=2)
    quit_yes.place(x=40, y=70)

    quit_no = Button(query, text='No', command=query.destroy, padx=18, pady=2)
    quit_no.place(x=150, y=70)


#Main Menu
root.title('Vulnerability Tool')
root.geometry('370x420')
root.resizable(False, False)

menu_label = Label(root, text='Main Menu', font=('Helvetica', 16))
menu_label.place(x=80, y=20)

application_button = Button(root, text='Check for Vulnerable Applications', width=30, command=vulnerable_apps_window)
application_button.place(x=30, y=100)

database_button = Button(root, text='Database Penetration Testing', width=26, command=database_testing_window)
database_button.place(x=30, y=180)

quit_button = Button(root, text='Quit', width=10, command=quit_query)
quit_button.place(x=30, y=260)

root.protocol('WM_DELETE_WINDOW', quit_query)
root.mainloop()